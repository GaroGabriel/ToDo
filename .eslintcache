[{"D:\\IT\\2020\\react\\ToDo\\todo\\src\\reportWebVitals.js":"1","D:\\IT\\2020\\react\\ToDo\\todo\\src\\App.js":"2","D:\\IT\\2020\\react\\ToDo\\todo\\src\\components\\ToDo\\ToDo.jsx":"3","D:\\IT\\2020\\react\\ToDo\\todo\\src\\index.js":"4","D:\\IT\\2020\\react\\ToDo\\todo\\src\\components\\ToDo\\Task\\Task.jsx":"5","D:\\IT\\2020\\react\\ToDo\\todo\\src\\components\\ToDo\\idGenerator.js":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":263,"mtime":1607005911948,"results":"9","hashOfConfig":"8"},{"size":3391,"mtime":1607009681648,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"8"},{"size":253,"mtime":1606563926802,"results":"12","hashOfConfig":"8"},{"size":134,"mtime":1607007007256,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7ghru6",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\IT\\2020\\react\\ToDo\\todo\\src\\reportWebVitals.js",[],"D:\\IT\\2020\\react\\ToDo\\todo\\src\\App.js",[],"D:\\IT\\2020\\react\\ToDo\\todo\\src\\components\\ToDo\\ToDo.jsx",["26","27"],"D:\\IT\\2020\\react\\ToDo\\todo\\src\\index.js",[],"D:\\IT\\2020\\react\\ToDo\\todo\\src\\components\\ToDo\\Task\\Task.jsx",[],"D:\\IT\\2020\\react\\ToDo\\todo\\src\\components\\ToDo\\idGenerator.js",[],{"ruleId":"28","severity":1,"message":"29","line":42,"column":27,"nodeType":"30","messageId":"31","endLine":42,"endColumn":29},{"ruleId":"28","severity":1,"message":"29","line":92,"column":50,"nodeType":"30","messageId":"31","endLine":92,"endColumn":52},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]({\r\n            inputValue: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    addTask = () => {\r\n        const inputValue = this.state.inputValue\r\n\r\n        const newTask = {\r\n            text: inputValue,\r\n            _id: idGenerator()\r\n        }\r\n        const task = [newTask, ...this.state.tasks]\r\n        if (inputValue) {\r\n            this.setState({\r\n                tasks: task,\r\n                inputValue: '',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onKeyPressed = (event) => {\r\n        if (event.keyCode == 13) {\r\n            this.addTask()\r\n        }\r\n    }\r\n\r\n    handleDelete = (taskId) => {\r\n        const newTasks = this.state.tasks.filter(task => task._id !== taskId)\r\n        this.setState({\r\n            tasks: newTasks\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { inputValue, tasks } = this.state;\r\n        const task = tasks.map((task, index) => {\r\n            return (\r\n\r\n                <Col xl={2} md={3} sm={6} xs={12} className='mt-3' key={index}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title className='Card__Title'> {index + 1}. {`${task.text.slice(0, 8)}...`}</Card.Title>\r\n                            <Card.Text>\r\n                                {task.text}\r\n                            </Card.Text>\r\n                            <Button variant=\"danger\" onClick={() => this.handleDelete(task._id)}>\r\n                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                            </Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return (\r\n\r\n            <Container className=\" mt-3\">\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        placeholder=\"Create new task\"\r\n                        aria-label=\"Create new task\"\r\n                        aria-describedby=\"basic-addon2\"\r\n                        style={{ outline: 'none' }}\r\n                        value={inputValue}\r\n                        onChange={this.getInputValue}\r\n                        onKeyDown={(event) => this.onKeyPressed(event)}\r\n                    />\r\n                    <InputGroup.Append>\r\n                        <Button\r\n                            disabled={inputValue == ''}\r\n                            style={{ outline: 'none' }}\r\n                            variant=\"outline-secondary\"\r\n                            onClick={this.addTask}\r\n\r\n                        >\r\n                            <FontAwesomeIcon icon={faFolderPlus} />\r\n                        </Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n\r\n                <Row className='justify-content-center'>\r\n                    {task}\r\n                </Row>\r\n            </Container>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ToDo;","D:\\IT\\2020\\react\\ToDo\\todo\\src\\index.js",[],"D:\\IT\\2020\\react\\ToDo\\todo\\src\\components\\ToDo\\Task\\Task.jsx",[],"D:\\IT\\2020\\react\\ToDo\\todo\\src\\components\\ToDo\\idGenerator.js",[],{"ruleId":"29","severity":1,"message":"30","line":42,"column":27,"nodeType":"31","messageId":"32","endLine":42,"endColumn":29},{"ruleId":"29","severity":1,"message":"30","line":92,"column":50,"nodeType":"31","messageId":"32","endLine":92,"endColumn":52},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]